---
# Source: mark-1/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orca-server
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
---
# Source: mark-1/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: orca-server-secret
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
type: Opaque

data:
  CONFIG_PROP: "Y29uZmlnLXBvc3RncmVzLnByb3BlcnRpZXM="
---
# Source: mark-1/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: orca-server-config
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
data:
  config-postgres.properties: "# Servers.\nconductor.grpc-server.enabled=false\n\n# Database persistence type.\nconductor.db.type=postgres\nconductor.queue.type=redis_standalone\nconductor.redis.hosts=mavq-product-intellisuite-dev-redis-orca-master.mavq-product-intellisuite-dev-redis-orca.svc.cluster.local:6379:us-central1:xu3ISpi7IUYa4XOqMjg2S50kV83xoJ\nspring.datasource.url=jdbc:postgresql://10.50.0.3:5432/dev-intellisuite-orca-server\nspring.datasource.username=dev-intellisuite-orca-server\nspring.datasource.password=nPH0x8qQMPFka1BMp2tg6hmYHzAMsfc\n\n# Hikari pool sizes are -1 by default and prevent startup\nspring.datasource.hikari.maximum-pool-size=60\nspring.datasource.hikari.minimum-idle=5\nspring.datasource.hikari.idle-timeout=120000\nspring.datasource.hikari.max-lifetime=600000\n\n# Elastic search instance indexing is enabled.\nconductor.indexing.enabled=true\nconductor.indexing.type=postgres\nconductor.elasticsearch.version=postgres\n\n# Load sample kitchen sink workflow\nloadSample=false\n"
---
# Source: mark-1/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: orca-server
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
---
# Source: mark-1/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orca-server
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mark-1
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: mark-1-0.1.0
        app.kubernetes.io/name: mark-1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        customer: intellisuite
        project: intellisuite
        team: intellisuite-orca-server
    spec:
      imagePullSecrets:
        - name: gitlab-registry
      volumes:
        
        
        
        
        
        - name: orca-server-secret
          secret:
            secretName: orca-server-secret
            optional: false
        
        
        - name: orca-server-config
          configMap:
            name: orca-server-config
            optional: false
      restartPolicy: Always
      serviceAccountName: orca-server
      containers:
        - name: mark-1
          image: "registry.gitlab.mavq.com/product/intellisuite/orca-server/orca-server/master:9b90112ed939f689fe26777eca16b54eeb8f2c88"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          
          - name: orca-server-secret
            mountPath: /var/run/secrets/orca-server-secret
            readOnly: true
          - name: orca-server-config
            mountPath: /app/config/
            readOnly: true
          envFrom:
          
            - secretRef:
                name: orca-server-secret
            - configMapRef:
                name: orca-server-config

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 15
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              scheme: HTTP
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 3

          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pool
                operator: In
                values:
                - e2-4c-16g
              - key: environment
                operator: In
                values:
                - T2
      tolerations:
        - effect: NoSchedule
          key: pool
          operator: Equal
          value: e2-4c-16g
---
# Source: mark-1/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: orca-server
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orca-server
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
---
# Source: mark-1/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orca-server
  labels:
    helm.sh/chart: mark-1-0.1.0
    app.kubernetes.io/name: mark-1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    customer: intellisuite
    project: intellisuite
    team: intellisuite-orca-server
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "orca-server.dev.intellisuite.internal.mavq.io"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: orca-server
                port:
                  number: 80
